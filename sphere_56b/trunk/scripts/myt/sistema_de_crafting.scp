//*****************************************************************************
//*****************************************************************************
//
// SISTEMA DE CRAFTING por
//
//          Galthar
//          UsMarine (vinicius.arroyo at gmail.com)
//
//*****************************************************************************
//*****************************************************************************

//TODO:

//MODO DE USAR:

//obj=<src.findid.i_faz_item.uid>       //chamar o objeto de controle
//obj.cleartags                                             //apagar TODAS as tags do objeto
//selecione das tags abaixo somente as que o item ira usar e atribua os valores
//src.fazitem                                                   //inicia a manufatura

//TAGS usadas:
//opções de resources:
//obj.tag.neartype      tipo do item que tem que estar perto (2 tiles)
//obj.tag.nearname      nome representando o tipo
//obj.tag.espid             id da ferramenta necessaria
//obj.tag.espname           nome da ferramenta necessaria
//obj.tag.res1 [2,3,4]  id da materia prima 1,2,3,4
//obj.tag.amt1 [2,3,4]  quantidade da materia prima 1,2,3,4
//obj.tag.nam1 [2,3,4]  nome da materia prima 1,2,3,4
//obj.tag.liq           liquido necessário (num recipiente)
//obj.tag.liqamt        quantas doses de liquido
//obj.tag.uid1              uid da materia prima 1, usado no lugar do res1
//obj.tag.needtype      tipo do item que eh pedido no inicio do processo
//obj.tag.need              nome do item que eh pedido no inicio do processo
//obj.tag.devolute      id do item a ser criado no momento da coleta da materia prima

//opções de sucesso/falha
//obj.tag.skill             skill a ser testado
//obj.tag.dif                   dificuldade do skill a ser testado em % (FORMATO 35 = 35.0)

//opções de animação
//obj.tag.sfx                   id do som
//obj.tag.anim              id da animacao
//obj.tag.emote             emote gerado
//obj.tag.delay             duracao da animação em segundos
//obj.tag.scrap             item colocado no chao no final do processo (sujeira)

//opções do item
//obj.tag.item              id do item a ser gerado no final do processo
//obj.tag.morex             
//obj.tag.morey
//obj.tag.morez
//obj.tag.morem
//obj.tag.more1h
//obj.tag.more1l
//obj.tag.more1
//obj.tag.color
//obj.tag.name              nome a ser dado ao item gerado
//obj.tag.type
//obj.tag.amt               amount (só para itens que tenham PILE=1)
//obj.tag.dono              FLAG: faz o uid do crafter ser o dono do item
//obj.tag.wmakefurn         FLAG: faz este item pertencer ao sistema de furniture
//obj.tag.iswpn             FLAG: faz o maxhits do item (arma) ser gerado de acordo com armslore
//obj.tag.dupe              FLAG: Duplica o item criado. Pode usar-se obj.tag.dupe=3 para ter 4 no final
//obj.tag.dispid            dispid do item

//opções avançadas
//obj.tag.f_init            funcao chamada quando inicia o processo (todos resources ok)
//obj.tag.f_step            funcao chamada a cada step do processo (pode gerar animacoes diferentes)
//obj.tag.f_end             funcao chamada no fim do processo
//obj.tag.f_done            funcao chamada no fim do processo com o item gerado ou a falha
//obj.tag.abort             aborta repeticoes (mais itens) se diferente de 0

//EXEMPLO

//obj=<src.findid.i_faz_item.uid>
//obj.cleartags
//obj.tag.delay=3               //3 segundos
//obj.tag.skill=alchemy         
//obj.tag.dif=30
//obj.tag.res1=i_potion_yellow
//obj.tag.nam1=pocao amarela
//obj.tag.amt1=1
//obj.tag.item=i_pocao_verde
//fazitem

//ver manual de craft para maiores informacoes

[PLEVEL 1]
fazitem

[DEFNAME craft_system]
statf_cantcraft         080d50436 //statf_onhorse|statf_hidden|statf_hallucinating|statf_fly|statf_stone|statf_hasshield|statf_polymorph|statf_war|statf_sleeping|statf_freeze|statf_dead

//*****************************************************************************
//*****************************************************************************
// FUNTCTIONs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// crafting_init
//*****************************************************************************
//inicializa sistema no char
[FUNCTION crafting_init]
serv.newitem i_mry_fazitem
new.equip

//*****************************************************************************
// dialog_fazitem ()
//*****************************************************************************
[FUNCTION dialog_fazitem]
if !(<src.ctag0.qtditem>)
    src.ctag.qtditem=1
endif
dialog d_fazitem
return 1

//*****************************************************************************
// fazitem ([amount])
//*****************************************************************************
//faz o item que esta configurado pelo i_faz_item
//se a quantidade nao for especificada, faz 1
[FUNCTION fazitem]

//cria memory de controle se nao houver
if !(<restest 1 i_faz_item>)
    serv.newitem i_faz_item
    new.equip
endif

obj=<src.findid.i_faz_item.uid>

if (<obj.timer>!=-1)
    sysmessagered Voce so pode trabalhar com um item por vez.
    return 1
endif

if !(<obj.tag0.item>)
    sysmessagered Nao ha item para ser feito.
    return 1
endif

//acerta a quantidade a ser feita
if (!<ISNUM <argv[0]>>)
    obj.more2=1
elif (<argv[0]> > 10)
    sysmessagered So e possivel fazer ate dez itens por vez.
    obj.more2=10
else
    obj.more2=<argv[0]>
endif

//faz
if (!<checkResources>)
    startCraft
endif
return 1

//*****************************************************************************
// checkResources()
//*****************************************************************************
//usado pelo i_faz_item e fazItem() para verificar os resources e fazer o item
//objeto padrao deve ser o player
//return 0 if resources available
//return 1 of something is missing
[FUNCTION checkResources]
obj=<findid.i_faz_item.uid>

//gm can make anything
if (<isgm>)
    return 0
endif

//verifica se esta perto do tipo desejado
if (<obj.tag0.neartype>)
    if !(<isneartype <obj.tag.neartype> 2>)
        sysmessageyellow Voce precisa estar proximo de um(a) <obj.tag.nearname>.
        return 1
    endif
endif

//verifica se tem ferramenta necessaria
if !(strmatch(<obj.tag.espid>,)) 
    if !(<restest 1 <obj.tag.espid>>)
        cantCraft
        return 1
    endif
endif 

//verifica resources
if (<obj.tag0.amt1>) 
    if !(<obj.tag0.uid1>)
        if !(<restest <obj.tag0.amt1> <obj.tag.res1>>)
            cantCraft
            return 1
        endif
    else
        REF1=<obj.tag0.uid1>
        if (<REF1.amount><<obj.tag0.amt1>)
            cantCraft
            return 1            
        endif
    endif
endif

if (<obj.tag0.amt2>) 
    if !(<restest <obj.tag0.amt2> <obj.tag.res2>>)
        cantCraft
        return 1
    endif
endif

if (<obj.tag0.amt3>) 
    if !(<restest <obj.tag0.amt3> <obj.tag.res3>>)
        cantCraft
        return 1
    endif
endif

if (<obj.tag0.amt4>)
    if !(<restest <obj.tag0.amt4> <obj.tag.res4>>)
        cantCraft
        return 1
    endif
endif

if (!<IsEmpty <obj.tag.liq>>)
    if !(<liquidtest <obj.tag0.liqamt>,<obj.tag.liq>>)
        cantCraft
        return 1
    endif
endif

return 0

//*****************************************************************************
// startCraft( repeat )
//*****************************************************************************
//objeto padrao deve ser o player
[FUNCTION startCraft]
obj=<findid.i_faz_item.uid>

//inicializa i_faz_item
ctag.disturb=
ctag.e_no_move_x=<p.x>
ctag.e_no_move_y=<p.y>
events +e_no_attack
events +e_no_dclick

obj.more1=<obj.tag0.delay>
obj.tag.falha=0

//pede pelo tipo necessario se for a primeira vez
if (<obj.tag0.needtype>) && !(0<argv[0]>)
    sysmessageyellow Selecionar <obj.tag.need>:
    obj.target
else
    obj.timer=1
    
    if !(strmatch(<obj.tag.f_init>,))
        TRY <obj.tag.f_init> <obj.tag0.selection>
    endif
endif

//*****************************************************************************
// consumeResources
//*****************************************************************************
//usado pelo i_faz_item para consumir a materia prima
//objeto padrao deve ser o player
[FUNCTION consumeResources]
obj=<findid.i_faz_item.uid>

//gm can make anything
if (<isgm>)
    return 0
endif

if (<obj.tag0.amt1>)
    if (<obj.tag0.uid1>)
        REF1=<obj.tag.uid1>
        REF1.amount=<REF1.amount>-<obj.tag.amt1>
        if (!<REF1.amount>)
            REF1.remove
        endif
    else
        consume <obj.tag0.amt1> <obj.tag.res1>
    endif
endif
if (<obj.tag0.amt2>)
    consume <obj.tag0.amt2> <obj.tag.res2>
endif
if (<obj.tag0.amt3>)
    consume <obj.tag0.amt3> <obj.tag.res3>
endif
if (<obj.tag0.amt4>)
    consume <obj.tag0.amt4> <obj.tag.res4>
endif
if (!<IsEmpty <obj.tag.liq>>)
    consumeliquid <obj.tag0.liqamt>,<obj.tag.liq>
endif
if !(strmatch(<obj.tag.devolute>,))
    serv.newitem <obj.tag.devolute>
    new.cont=<findlayer.layer_pack.uid>
endif
update

//*****************************************************************************
// cantCraft
//*****************************************************************************
//OBJ é o i_faz_item que nao pode ser feito
//objeto padrao deve ser o player
[FUNCTION cantCraft]
sysmessagered Voce precisa de:
    
if !(strmatch(<obj.tag.espid>,))
    sysmessagered - <obj.tag.espname>
endif
    sysmessagered - <serv.resources.<obj.tag.res1>.name> ( <eval <obj.tag0.amt1>> )
if (<obj.tag0.res2>)
    sysmessagered - <serv.resources.<obj.tag.res2>.name> ( <eval <obj.tag0.amt2>> )
endif
if (<obj.tag0.res3>)
    sysmessagered - <serv.resources.<obj.tag.res3>.name> ( <eval <obj.tag0.amt3>> )
endif
if (<obj.tag0.res4>)
    sysmessagered - <serv.resources.<obj.tag.res4>.name> ( <eval <obj.tag0.amt4>> )
endif
if (!<IsEmpty <obj.tag.liq>>)
    sysmessagered - <obj.dtag0.liqamt> doses de <DEF.LIQUID_<DEF.<obj.tag.liq>>_NAME>
endif

//*****************************************************************************
// craftAborted
//*****************************************************************************
//objeto padrao deve ser o player
[FUNCTION craftAborted]
if (<flags>&statf_onhorse)
    sysmessageyellow Nao pode fazer isso estando em uma montaria.
elif (<flags>&statf_hidden)
    sysmessageyellow Nao pode fazer isso escondido.
elif (<flags>&statf_hallucinating)
    sysmessageyellow Nao pode fazer isso tendo alucinacoes.
elif (<flags>&statf_fly)
    sysmessageyellow Nao pode fazer isso correndo/voando.
elif (<flags>&statf_stone)
    sysmessageyellow Nao pode fazer isso petrificado.
elif (<flags>&statf_hasshield)
    sysmessageyellow Nao pode fazer isso com escudo na mao.
elif (<flags>&statf_polymorph)
    sysmessageyellow Nao pode fazer isso estando em outra forma.
elif (<flags>&statf_war)
    sysmessageyellow Nao pode fazer isso em luta.   
elif (<flags>&statf_sleeping)
    sysmessageyellow Nao pode fazer isso dormindo.  
elif (<flags>&statf_dead)
    sysmessageyellow Nao pode fazer isso morto. 
else
    sysmessageyellow Interrompido.
endif

//*****************************************************************************
// generateItem
//*****************************************************************************
//usado pelo i_faz_item quando vai gerar o item final
//objeto padrao deve ser o i_faz_item
[FUNCTION generateItem] 

if (<tag.item>==1)
    return 1
endif

//cria item com caracteristicas desejadas
serv.newitem=<tag.item>
if (<tag0.more1l>)
 new.more1l=<tag.more1l>
endif
if (<tag0.more1h>)
 new.more1h=<tag.more1h>
endif
if (<tag0.more1>)
 new.more1=<tag.more1>
endif
if (<tag0.more2>)
 new.more2=<tag.more2>
endif
if (<tag0.color>)
 new.color=<tag.color>
endif
if (<tag0.morex>)
 new.morex=<tag.morex>
endif
if (<tag0.morey>)
 new.morey=<tag.morey>
endif
if (<tag0.morez>)
 new.morez=<tag.morez>
endif
if (<tag0.morem>)
 new.morem=<tag.morem>
endif
if !(strmatch(<tag.name>,))
 new.name=<tag.name>
endif
if !(strmatch(<tag.type>,))
 new.type=<tag.type>
endif
if (<tag0.amt>>1)
 new.amount=<tag.amt>
endif
if !(strmatch(<tag.dispid>,))
 new.dispid=<tag.dispid>
endif
if (<tag0.wmakefurn>)
 new.events +e_furniture
endif

if (<new.type>==t_incomplete_forged)
    if (STRMATCH(t_weapon*,<serv.itemdef.<new.tag0.item>.type>)) || (STRMATCH(t_armo*,<serv.itemdef.<new.tag0.item>.type>))
        generateWpnMaxHits
    endif
elif (<new.IsWeapon>) || (<new.type>==t_armor) || (<new.type>==t_armor_leather) || (<new.type>==t_shield)
    generateWpnMaxHits
endif

if (<tag0.isclt>) || (STRMATCH(*clothing*,<new.type>))
    generateCltMaxHits
endif

new.cont=<cont.findlayer(layer_pack).uid>

if (<tag0.dupe>)
    new.dupe <tag0.dupe>
endif

new.update

cont.sysmessageorange Terminou <new.name>.

//*****************************************************************************
// generateWpnMaxHits
//*****************************************************************************
//usado pelo i_faz_item quando vai gerar o max hits de uma arma
//NEW deve ser o item gerado
//objeto padrao deve ser o i_faz_item 
[FUNCTION generateWpnMaxHits]
if (<new.type>==t_weapon_bow) || (<new.type>==t_weapon_xbow)
    LOCAL.skill=<cont.bowcraft>
else
    LOCAL.skill=<cont.armslore>
    cont.skill_gain SKILL_ARMSLORE
endif

if (<new.TDATA4>)
    new.maxhits=<BETWEEN 10,<new.tdata4>,0,<local.skill>>
else
    //acha durabilidade em funcao da skill
    LOCAL.dur = <BETWEEN 10,1000,<LOCAL.skill>,1000>
    //da bonus de ateh 20% da skill
    LOCAL.dur += <R<eval <LOCAL.skill>/5>>
    
    new.maxhits=<LOCAL.dur>
endif
new.hits=<new.maxhits>

//serv.log [generateWpnMaxHits] <new.TDATA4> / <new.hits> / <dLOCAL.skill> / <new.type>
//*****************************************************************************
// generateCltMaxHits
//*****************************************************************************
//usado pelo i_faz_item quando vai gerar o max hits de uma roupa
//NEW deve ser o item gerado
//objeto padrao deve ser o i_faz_item 
[FUNCTION generateCltMaxHits]
if (<cont.tailoring> >= 950)
 new.more1l=1000
elif (<cont.tailoring> >= 800)
 new.more1l={750 1000}
elif (<cont.tailoring> >= 700)
 new.more1l={450 750}
elif (<cont.tailoring> >= 600)
 new.more1l={250 450}
elif (<cont.tailoring> >= 500)
 new.more1l={100 250}
else
 new.more1l={50 100}
endif
new.more1h=<new.more1l>

//*****************************************************************************
// testitem
//*****************************************************************************
[FUNCTION testitem]
obj=<src.findid.i_faz_item.uid>
obj.cleartags
obj.tag.delay=3
obj.tag.skill=cooking
obj.tag.dif=35
obj.tag.anim=9
obj.tag.sfx=019
obj.tag.res1=i_log
obj.tag.nam1=toras
obj.tag.amt1=1
obj.tag.liq=LIQUID_WATER
obj.tag.liqamt=9
obj.tag.espid=i_alicate
obj.tag.espname=alicate
obj.tag.neartype=t_anvil
obj.tag.nearname=bigorna
obj.tag.item=i_chest_metal
obj.tag.emote=moldando
obj.tag.wmakefurn=1
obj.tag.devolute=i_bacia
src.fazitem
return 1

//*****************************************************************************
// craftItem <DEFNAME>
//*****************************************************************************
[FUNCTION craftItem]
if !<argv[0]>
    return 0
elif !<serv.resources.<argv[0]>>
    return 0
endif

obj=<src.findid.i_faz_item>
obj.cleartags
obj.tag.skill=<serv.skill.<DEF.<serv.resources.<argv[0]>.SKILLMAKE.1.key>>.key>
obj.tag.dif=<eval <serv.resources.<argv[0]>.SKILLMAKE.1.val>/10>

LOCAL.c=<serv.resources.<argv[0]>.resources.count>
for R 1 <LOCAL.c>
    try obj.tag.res<dLOCAL.R>=<serv.resources.<argv[0]>.RESOURCES.<dLOCAL.R>.key>
    try obj.tag.amt<dLOCAL.R>=<serv.resources.<argv[0]>.RESOURCES.<dLOCAL.R>.val>
endfor
obj.tag.item=<argv[0]>
obj.tag.amt=<MAXIMUM 1,0<argv[0]>>

//Casos especiais
call craft_<serv.resources.<argv[0]>.type> <argv[0]>

src.fazitem <argv[1]>
return 1

[FUNCTION craft_t_weapon_fence]
obj.tag.anim=9
obj.tag.sfx=02a
obj.tag.espid=i_alicate
obj.tag.espname=alicate
obj.tag.neartype=t_forge        
obj.tag.nearname=forja acesa
obj.tag.item=i_metal_forjado
obj.tag.f_done=f_setItemTag <argv[0]>,
obj.tag.emote=forjando
obj.tag.scrap=i_foligem_bs
obj.tag.delay=<eval ((STRLEN(<serv.resources.<argv[0]>.resources>))/2)+<MAXIMUM 3,<eval <serv.resources.<argv[0]>.SKILLMAKE.1.val>/33>>>
local.craftable=1

[FUNCTION craft_t_weapon_sword]
call craft_t_weapon_fence

[FUNCTION craft_t_weapon_mace_sharp]
call craft_t_weapon_fence
obj.tag.item=i_bola_maca

[FUNCTION craft_t_weapon_mace_smith]
call craft_t_weapon_fence
obj.tag.item=i_maca_martelo

[FUNCTION craft_t_weapon_axe]
call craft_t_weapon_fence
obj.tag.item=i_ponta_picareta

[FUNCTION craft_t_arame]
obj.tag.anim=19
obj.tag.sfx=02b
obj.tag.espid=i_trefila
obj.tag.espname=trefila
obj.tag.neartype=t_forge        
obj.tag.nearname=forja acesa
obj.tag.item=i_metal_fundido
obj.tag.f_done=f_setItemTag <argv[0]>,
obj.tag.emote=fundindo metal
obj.tag.scrap=i_foligem_bs
obj.tag.more1=0//Cancelar hits/maxhits
obj.tag.morex=<eval (<blacksmithing>/333)+1>//Amount
obj.tag.delay=<eval <serv.itemdef.<argv[0]>.skillmake.1.val>/33>
local.craftable=1

[FUNCTION craft_t_mring]
obj.tag.anim=6
obj.tag.sfx=1453
obj.tag.espid=i_alicate
obj.tag.espname=alicate
obj.tag.item=<argv[0]>
obj.tag.amt=<eval <blacksmithing>/10>
obj.tag.emote=fechando aneis
obj.tag.delay=<eval <serv.itemdef.<argv[0]>.skillmake.1.val>/33>
local.craftable=1


//*****************************************************************************
//*****************************************************************************
// ITEMDEFs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// i_mry_fazitem
//*****************************************************************************
//memory com as caracteristicas do item a ser criado e os efeitos usados
//obj.tag.falha             indica falha no processo devido a movimento ou dclick do player

//more1                             duração restante da animação
//more2                             quantidade de vezes que vai repetir todo o processo

[ITEMDEF i_mry_fazitem]
DEFNAME=i_faz_item
ID=01ebc
TYPE=t_eq_script
NAME=Fazendo item
LAYER=layer_special

ON=@TARGON_CHAR
cont.sysmessagered Alvo invalido.
timer=-1
return 1

ON=@TARGON_GROUND
cont.sysmessagered Alvo invalido.
timer=-1
return 1

ON=@TARGON_ITEM
if (<cont.targ.type>==<tag.needtype>)
    if (<cont.targ.distance> >= 2)
        cont.sysmessagered Chegue mais perto.
        timer=-1
    else
        tag.selection=<cont.targ.uid>
        if !(strmatch(<tag.f_init>,))
            TRY cont.<tag.f_init> <tag.selection>
        endif
        timer=1
    endif
    return 1
endif
cont.sysmessagered Alvo invalido.
return 1

ON=@TIMER
timer=-1

//caso player se mova, cancela
if (<cont.ctag0.disturb>) || (<cont.flags>&statf_cantcraft) || (<cont.ctag0.e_no_move_x>!=<cont.p.x>) || (<cont.ctag0.e_no_move_y>!=<cont.p.y>)
    more2=1
    tag.falha=1
endif

//ainda esta no loop de animacao?
//faz anim., sfx e emotes
if (<more1>) && (!<tag0.falha>)
    more1=<more1>-1
    timer=1
    dorand (3)
        cont.sfx <tag.sfx>
    enddo
    if ( <tag0.anim> )
        cont.anim <tag0.anim>
    endif
    if !(strmatch(<tag.emote>,))
        dorand (5)
            cont.emoteyellow <tag.emote>
        enddo
    endif
    if !(strmatch(<tag.f_step>,))
        TRY cont.<tag.f_step> <tag0.selection>
    endif
    return 1
//fim do loop, gera resultado
else

    if !(strmatch(<tag.f_end>,))
        TRY cont.<tag.f_end> <tag0.selection>,<more1>
    endif

    if (<tag0.falha>)
        cont.craftAborted
        return 1
    endif
    
    //se não houve falha gerada por movimento ou dclick
    if !(<cont.checkResources>)
        //consome itens
        cont.consumeResources
        //ganha skill e verifica sucesso
        cont.skill_gain skill_<tag.skill>
        if (<cont.skillcheck <tag.skill> <tag.dif>> == 1)
            generateItem
            LOCAL.u=1,<new>
        else
            cont.sysmessageyellow Falhou.
            LOCAL.u=0,0
        endif

        if !(strmatch(<tag.f_done>,))
            TRY cont.<tag.f_done> <LOCAL.u>
        endif
    else
        return 1
    endif

    if !(<tag0.abort>)
        //verifica se ha mais para tentar fazer 
        more2=<more2>-1
        if (<more2>)
            if (!<cont.checkResources>)
                cont.startCraft 1
            endif
        //acabou, gera sujeira
        else
            if !(strmatch(<tag.scrap>,))
                serv.newitem <tag.scrap>
                new.p=<cont.p>
                new.timer {5 10}
                new.attr= 012
            endif
        endif
    else
        cleartags
    endif
endif
return 1

//*****************************************************************************
//*****************************************************************************
// DIALOGs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// d_fazitem - Gera menu para refazer ultimo item
//*****************************************************************************
[DIALOG d_fazitem]
-310, 120

PAGE 0
//noclose
//nomove
resizepic 312 219 3500 165 135
button 325 250 2224 2224 1 0 1  // <- botao do +1
button 325 270 2224 2224 1 0 2  // <- botao do -1
button 325 310 2224 2224 1 0 3  // <- botao de MIN
button 400 270 2224 2224 1 0 4  // <- botao de fazer
button 400 310 2224 2224 1 0 5  // <- botao de sair
button 325 290 2224 2224 1 0 6  // <- botao de MAX
text 345 225 152 0  //<--- texto label
text 345 246 1345 1     //<--- texto do mais 1
text 435 226 162 2  //<--- texto do contador    
text 345 267 95 3   //<--- texto do menos 1
text 345 305 95 4   //<--- texto de zerar
text 420 267 95 5       //<--- texto para fazer
text 420 305 41 6       //<--- texto para sair
text 345 285 95 7   //<--- texto para MAX

[DIALOG d_fazitem TEXT]
Quantidade:
+1
<eval 0<src.ctag.qtditem>>
-1
min
fazer
sair
max
[DIALOG d_fazitem BUTTON]

ON=1                    //INCREMENTA
    if ( <src.ctag.qtditem> < 10 )
        src.ctag.qtditem=<src.ctag.qtditem>+1
        src.dialog=d_fazitem
        src.update
        return 
    else
        src.sysmessageyellow Limite alcancado
        src.dialog=d_fazitem
        src.update
        return 
ON=2                    //DECREMENTA
    if ( <src.ctag.qtditem> > 1 )   
        src.ctag.qtditem=<src.ctag.qtditem>-1
        src.update
        src.dialog=d_fazitem
        return 
    else
        src.sysmessageyellow Limite alcancado
        src.dialog=d_fazitem
        src.update
        return 
ON=3                    //MINIMO
    src.ctag.qtditem=1
    src.update
    src.dialog=d_fazitem
    return 
ON=4                    //FAZ O ITEM
    if !(<src.ctag0.qtditem>)
        src.sysmessageyellow Nao foi selecionada a quantidade
        return
    else
        src.fazitem <src.ctag.qtditem>
        src.update  
        return 
ON=5
    return

ON=6                //MAXIMO
    src.ctag.qtditem=10
    src.dialog=d_fazitem
    src.update
    return

[EOF]
