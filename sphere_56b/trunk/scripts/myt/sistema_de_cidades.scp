[COMMENT sistema_de_cidades]
##################################################################
##                                                              ##
##       Mystical Tales Shard - Sistema de cidades v2.2a        ##
##              Galthar, o Errante    11/05/2009                ##
##                                                              ##
##################################################################

        -=Tabelas na DB=-

DROP TABLE IF EXISTS `mytserver`.`towns`;
CREATE TABLE  `mytserver`.`towns` (
  `region` varchar(45) NOT NULL default 'a_world',
  `capital` varchar(45) NOT NULL default 'a_world',
  `type` int(10) unsigned NOT NULL default '1',
  `master` int(10) unsigned NOT NULL default '0',
  `artefactUID` int(10) unsigned NOT NULL default '0',
  `permissions` int(10) unsigned NOT NULL default '6032',
  `tresure` int(10) unsigned NOT NULL default '1000',
  `vaultUID` int(10) unsigned NOT NULL default '0',
  `color1` int(10) unsigned NOT NULL default '4',
  `color2` int(10) unsigned NOT NULL default '54',
  `commercialfee` int(10) unsigned NOT NULL default '5',
  `buildingfee` int(10) unsigned NOT NULL default '15',
  `tilelandprice` int(10) unsigned NOT NULL default '13',
  `tilebuildprice` int(10) unsigned NOT NULL default '22',
  `tilefixtureprice` int(10) unsigned NOT NULL default '70',
  `FriendRaces` varchar(255) NOT NULL default 'Anao,Elfo,Drow,Humano,Orc',
  PRIMARY KEY  (`region`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

DROP TABLE IF EXISTS `mytserver`.`towns_privs`;
CREATE TABLE  `mytserver`.`towns_privs` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `region` varchar(45) NOT NULL,
  `position` int(10) unsigned NOT NULL default '999',
  `title` varchar(24) NOT NULL,
  `description` varchar(1024) NOT NULL,
  `privs` int(10) unsigned NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM;

DROP TABLE IF EXISTS `mytserver`.`towns_members`;
CREATE TABLE  `mytserver`.`towns_members` (
  `UID` int(10) unsigned NOT NULL default '0' COMMENT '''UID do player''',
  `region` varchar(45) NOT NULL default 'a_world' COMMENT '''Defname da region''',
  `priv_id` int(10) unsigned NOT NULL default '999' COMMENT '''id em towns_privs. 0 se banido''',
  `flags` int(10) unsigned NOT NULL default '0' COMMENT '''Criminal, em debito, preso e etc.'''
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


        -=Tags utilizadas=-
ctag.town_region
ctag.town_page
ctag.town_type
ctag.town_coloriq
ctag.town_privid


        -=API=-
town [new|delete|<region.defname>]
        Dialog de interface com a town
        - new: Nova Town
        - delete: tira a town da DB
        - <region.defname>: Abre o dialog para a dada região
        - DEFAULT:  Abre o dialog para região em que o player está
        
town_TrasferMastership <region.defname>,<playerUID>
        Transfere o título de mestre da Town <argv0> para o player <argv1>
        
town_getPermissions [<region.defname>]
        Retorna o bitmask de permissividade da town (ILLEGAL_* e TOWN_CAN_*)

town_addCash <argn>
        Adiciona <argn> ao tesouro da town e retorna o total

town_Check_Privs <argn>
        Retorna 1 se DEFAULT tem o privilégio <argn1> nessa town
        
town_CheckPrivs <argn1>
        town_Check_Privs
        
        -=TODO=-
- Artefact e funcs

[DEFNAME sistema_de_cidades]
//Flags de permissions da town
ILLEGAL_WARMODE         01      //Entrar em warmode pode?
ILLEGAL_WEAPON          02      //Arma mais pesada que uma adaga ou cajado
ILLEGAL_HOOD            04      //Andar de capuz pode?
ILLEGAL_HARM            08      //QUALQUER harm. Incluindo de magia. SRC do @DAMAGE? @HIT? @SPELLSUCCESS de SPELL_HARM?
ILLEGAL_MAGIC           010     //QUALQUER magia. Até Healing ou Fireworks
ILLEGAL_STEAL           020     //Snooping e stealing.
ILLEGAL_LOCKPICK        040     //No step do lockpicking. 1x por segundo
ILLEGAL_RESOURCES       080     //Mining, lumber, @Kill BRAIN_ANIMAL, fishing, facas especiais
TOWN_CAN_SELL           0100    //Pode vender itens para NPCs
TOWN_CAN_BUY            0200    //Pode comprar itens de NPCs
TOWN_CAN_AZILUM         0400    //Pode-se pedir azilo
TOWN_AUTO_AZILUM        0800    //Azilo não precisa de permissão
TOWN_CAN_PETITION       01000   //Petições abertas para membros

//Nome das permissões da town
TOWN_PERMISSION_0       Andar em posicao de luta
TOWN_PERMISSION_1       Andar armado
TOWN_PERMISSION_2       Andar encapuzado
TOWN_PERMISSION_3       Ferir cidadaos
TOWN_PERMISSION_4       Fazer uso de magias
TOWN_PERMISSION_5       Roubar
TOWN_PERMISSION_6       Arrombar fechaduras
TOWN_PERMISSION_7       Coletar recursos naturais
TOWN_PERMISSION_8       Vender bens ou objetos
TOWN_PERMISSION_9       Comprar bens ou objetos
TOWN_PERMISSION_10      Pedir cidadania
TOWN_PERMISSION_11      Cidadania automatica
TOWN_PERMISSION_12      Abrir peticoes

//Privs dos membros da Town
TOWN_PRIV_WAR           01
TOWN_PRIV_HOOD          02
TOWN_PRIV_HARM          04
TOWN_PRIV_MAGIC         08
TOWN_PRIV_STEAL         010
TOWN_PRIV_LOCKPICK      020
TOWN_PRIV_RESOURCES     040
TOWN_PRIV_MARKET        080
TOWN_PRIV_PETITION      0100
TOWN_PRIV_PRIVS         0200
TOWN_PRIV_MEMBER        0400
TOWN_PRIV_BOOKS         0800
TOWN_PRIV_TAXES         01000
TOWN_PRIV_CONFISCATE    02000
TOWN_PRIV_TRESURE       04000
TOWN_PRIV_LAWS          08000
TOWN_PRIV_DIPLOMACY     010000
TOWN_PRIV_BOD           020000
TOWN_PRIV_HIRE          040000
TOWN_PRIV_GUARD         080000
TOWN_PRIV_KEEPER        0100000
TOWN_PRIV_SENESCHAL     0200000
TOWN_PRIV_SBOND         0400000
TOWN_PRIV_BBOND         0800000

//Nomes dos provs da Town
TOWN_PRIV_1             Lutar na cidade
TOWN_PRIV_2             Usar capuz
TOWN_PRIV_3             Causar dano
TOWN_PRIV_4             Usar magica
TOWN_PRIV_5             Roubar
TOWN_PRIV_6             Arrombar
TOWN_PRIV_7             Extrair recursos
TOWN_PRIV_8             Participar do mercado
TOWN_PRIV_9             Criar/votar peticoes
TOWN_PRIV_10            Alterar cargos
TOWN_PRIV_11            Adicionar/remover membros
TOWN_PRIV_12            Gerenciar livros
TOWN_PRIV_13            Alterar taxas
TOWN_PRIV_14            Confiscar mercadoria
TOWN_PRIV_15            Acesso ao tesouro
TOWN_PRIV_16            Promulgar leis
TOWN_PRIV_17            Poderes diplomaticos
TOWN_PRIV_18            Fazer ordens de compra
TOWN_PRIV_19            Contratar funcionarios
TOWN_PRIV_20            Comandar guardas
TOWN_PRIV_21            Comandar porteiros
TOWN_PRIV_22            Comandar senescal
TOWN_PRIV_23            Fazer pequeno emprestimo
TOWN_PRIV_24            Fazer grande emprestimo

//DEFNAME das páginas do gump de town
TOWN_PAGE_FOUND         1       //Fundação da Town. Para GMs
TOWN_PAGE_REPORT        2       //Informações gerais
TOWN_PAGE_CONFIG        3       //Configura a town (cores, raca, capital, tipo, cofre...)
TOWN_PAGE_PERMISSIONS   4       //Mostra o que é ILLEGAL_*
TOWN_PAGE_RACES         5       //Mostra racas amigas
TOWN_PAGE_BANS          6       //Mostra banidos
TOWN_PAGE_FRIENDS       7       //Mostra forasteiros (de raças inimigas) permitidos
TOWN_PAGE_TAXES         8       //Mostra as taxas da town
TOWN_PAGE_LAWS          9       //Mostra os textos de leis RP playermade
TOWN_PAGE_POSITIONS     10      //Mostra os cargos existentes (1=rei, 999=cidadão)
TOWN_PAGE_PRIVS         11      //Mostra privs dos cargos
TOWN_PAGE_MEMBERS       12      //Lista membros da town
TOWN_PAGE_MEMBER        13      //Mostra um membro
TOWN_PAGE_HIRES         14      //Mostra lista de NPCs para contratar
TOWN_PAGE_NPCS          15      //Lista NPCs contatados e custo para manter
TOWN_PAGE_NPC           16      //Mostra NPC, status, demitir...
TOWN_PAGE_POLLS         17      //Lista plebicitos
TOWN_PAGE_POLL          18      //Mostra um plebicito
TOWN_PAGE_PETITIONS     19      //Lista petições
TOWN_PAGE_PETITION      20      //Mostra uma petição
TOWN_PAGE_AZILUM        21      //Pede para percenter a town

//########################################################################
//########################################################################
//      Funções de interface com o sistema
//########################################################################
//########################################################################
[FUNCTION town]
if (STRMATCH(new,<args>))
 if (<region.defname>==a_world) || (<region.defname>==a_dungeons) || (!<region>)
  sysmessageyellow O mundo eh selvagem!
  return 0
 elif !(<town_IsTown>)
  ctag.town_region=<region.defname>
  ctag.town_page=<DEF.TOWN_PAGE_FOUND>
 else
  sysmessagered Ja ha registro de <region.name> como cidade!
  ctag.town_page=<DEF.TOWN_PAGE_REPORT>
 endif
elif (STRMATCH(delete,<args>))
 if !(<town_IsTown>)
  sysmessagered Nao ha registro de <region.name> como cidade!
 else
  town_deleteTown <region.defname>
 endif
 return 1
elif (<serv.resources.<args>.uid>&06000000)
 ctag.town_region=<args>
 ctag.town_page=<DEF.TOWN_PAGE_REPORT>
elif (<town_IsTown>)
 ctag.town_region=<region.defname>
 ctag.town_page=<DEF.TOWN_PAGE_REPORT>
else
 sysmessageyellow O mundo eh selvagem!
 return 0
endif
DIALOG d_town
return 1

[FUNCTION town_GetVault]
//Retorna a UID do cofre da TOWN [<argv0>] || DEFAULT
if (!<IsEmpty <args>>)
 local.town=<args>
else
 local.town=<region.defname>
endif
if (<town_IsTown <local.town>>)
 DB.QUERY="SELECT vaultUID FROM towns WHERE region='<DB.ESCAPEDATA <local.town>>'";
 ref1=<DB.ROW.0.vaultUID>
 if (<ref1.IsItem>)//Ainda existe?
  return <ref1>
 endif
 return 0
endif
return 0


[FUNCTION town_SetVault]
//Seta o container <argv1> como cofre da town <argv0>
//Existe essa town?
if (!<town_IsTown <argv0>>
 return 0
endif

ref1=<argv1>
//É um item válido?
if (<ref1.IsItem>)
 if (<ref1.type>!=t_container) && (<ref1.type>!=t_container_locked)
  serv.log [TOWNS] <ref1.name> (<ref1>@<ref1.p>) nao eh valido como cofre de <argv0>
  return 0
 endif
else
 serv.log [TOWNS] <ref1.name> (<ref1>@<ref1.p>) nao eh valido como cofre de <argv0>
 return 0
endif

//Já existe um cofre na town?
local.odlvault=<town_GetVault <argv0>>
if (<local.oldvault>)
 obj=<local.oldvault>
 if (<obj.IsItem>)
  //Transfere tudo de uma para outra
  FORCONT <obj> 0
   cont=<ref1>
  END
  ref1.update
 endif
endif

//Insere na debê
DB.QUERY="UPDATE towns SET vaultUID=<eval <ref1>> WHERE region='<argv0>';"
return 1

[FUNCTION town_getPermissions]
//Pega as leis de permissividade da town com region=<args> ou da region de DEFAULT.
if (!<IsEmpty <args>>)
 local.town=<args>
else
 local.town=<region.defname>
endif
if (<town_IsTown <local.town>>)
 DB.QUERY="SELECT permissions FROM towns WHERE region='<DB.ESCAPEDATA <local.town>>'";
 return <hval <DB.ROW.0.permissions>>
else
 return 0ff
endif

[FUNCTION town_getFirstColor]
//Pega a cor primaria da town com region=<args> ou da region de DEFAULT.
if (!<IsEmpty <args>>)
 local.town=<args>
else
 local.town=<region.defname>
endif
if (<town_IsTown <local.town>>)
 DB.QUERY="SELECT color1 FROM towns WHERE region='<DB.ESCAPEDATA <local.town>>'";
 return <hval <DB.ROW.0.color1>>
else
 return 0
endif

[FUNCTION town_getSecondColor]
//Pega a cor secundaria da town com region=<args> ou da region de DEFAULT.
if (!<IsEmpty <args>>)
 local.town=<args>
else
 local.town=<region.defname>
endif
if (<town_IsTown <local.town>>)
 DB.QUERY="SELECT color2 FROM towns WHERE region='<DB.ESCAPEDATA <local.town>>'";
 return <hval <DB.ROW.0.color2>>
else
 return 0
endif

[FUNCTION town_addcash]
//Adiciona <argn> moedas de cobre ao tesouro da town onde DEFAULT está e retorna o valor
if (<town_IsTown>)
 DB.QUERY="SELECT tresure FROM towns WHERE region='<region.defname>';"
 LOCAL.TRESURE=<DB.ROW.0.tresure>+<argn>
 DB.QUERY="UPDATE towns SET tresure=<dlocal.tresure> WHERE region='<region.defname>';"
 return <LOCAL.TRESURE>
else
 return 0
endif

[FUNCTION TOWN_CHECK_PRIVS]
//Checa se o DEFAULT temo privilégio <argn> na town em que ele está
return <IsGm>

[FUNCTION town_CheckPrivs]
return <TOWN_CHECK_PRIVS <argn>>

[FUNCTION flinktown]
if (!<argo>)
 targetf flinktown
else
 argo.more1=<region.defname>
 argo.type=t_town_artefact
 argo.link=<src>
endif

//########################################################################
//########################################################################
//      TYPEDEFs
//########################################################################
//########################################################################

[TYPEDEF t_town_artefact]
on=@CLIENTTOOLTIP
local.town=<serv.resources.<more1>.name>
src.f_sendTooltip <name> de <local.town>,O detentor deste artefato é o mestre de <local.town>.<DEF.br>Guarde muito bem este artefato!
return 1

on=@dclick
if (<src>==<topobj>)
 local.town=<serv.resources.<more1>.defname>
 DB.QUERY="SELECT master FROM towns WHERE region='<local.town>';"
 if (<src>==<hval <DB.ROW.0.master>>)
  src.sysmessageyellow Voce ja eh o mestre de <serv.resources.<more1>.name>.
 else
  town_TrasferMastership <local.town>,<src>
 endif
 link=<src>
endif

on=@destroy
serv.log Destruida!
local.vault=<town_GetVault <serv.resources.<more1>.defname>>
if (<local.vault>)
 obj=<local.vault>
else
 serv.newitem i_chest_metal
 new.p=<serv.resources.<more1>.p>
 new.attr=010
 new.timer=-1
 obj=<new>
 town_SetVault <serv.resources.<more1>.defname>,<obj>
endif
serv.newitem=<baseid>
new.type=<type>
new.more1=<more1>
new.p=<obj.p>
new.cont=<obj>
obj.update
return 1

//########################################################################
//########################################################################
//      Funções internas do sistema
//########################################################################
//########################################################################

[FUNCTION town_IsTown]
//Determina se existe TOWN na region <ARGS>. Se não há ARGS, usa a region em que DEFAULT está.
if (STRMATCH(a_*,<args>))
 if (<serv.resources.<args>.uid>&06000000)
  local.region=<args>
 else
  return 0
 endif
else
 local.region=<region.defname>
endif

if (<local.region>==a_world) || (<local.region>==a_dungeons) || (!<local.region>)
 return 0
endif
DB.QUERY="SELECT region FROM towns WHERE region='<DB.ESCAPEDATA <local.region>>'";
if (<DB.ROW.NUMROWS>)
 return 1
else
 return 0
endif

[FUNCTION town_AddTown]
//Adiciona como town a region <argv0> com tipo <argv1> com <argv2> como como capital
//Tipo é 1=Estado maior, 2=sub-região ou 3=região sob administração
DB.EXECUTE="INSERT INTO towns SET region='<DB.ESCAPEDATA <argv0>>', type=<eval <argv1>>, capital='<DB.ESCAPEDATA <argv2>>', tresure=0;"
DB.EXECUTE="INSERT INTO towns_privs SET region='<DB.ESCAPEDATA <argv0>>', position=1, title='mestre', description='Mestre. Todos os privilegios. Nao pode ser apagado.', privs=<eval 0FF>;"
DB.EXECUTE="INSERT INTO towns_privs SET region='<DB.ESCAPEDATA <argv0>>', position=999, title='membro', description='Simples membro. Sem privilegios. Nao pode ser apagado', privs=0;"

[FUNCTION townAddSubTown]
//Adiciona como town a region <ctag.town_region> com tipo <ctag.town_type> com <ctag.town_capital_<argn>> como como capital
//Tipo é 1=Estado maior, 2=sub-região ou 3=região sob administração
town_AddTown <ctag.town_region>,<dctag.town_type>,<ctag.town_capital_<argn>>
local.town_region=<ctag.town_region>
town <ctag.town_region>

[FUNCTION town_selectCapital]
// LIST para seleção da capital da nova Town
list_new Selecione a capital para <serv.resources.<ctag.town_region>.name>:
list_newDbCol 20,Nome,Nome
list_newDbCol 200,Tipo,Tipo
list_setAction townAddSubTown
list_loadFromDb "SELECT region AS Nome, type AS tipo, capital from towns WHERE type < <eval <argn1>>;"

//Apurar os itens para melhor identificação
for i <ctag.list_numitems>
 //Salvar defname da capital em outra lista
 TRY ctag.town_capital_<dlocal.i>=<ctag.list_row<local.i>_01>
 TRY ctag.list_row<local.i>_01=<serv.resources.<ctag.list_row<local.i>_01>.name>
 DOSWITCH <ctag.list_row<local.i>_02>
  local.null
  TRY ctag.list_row<local.i>_02=Estado maior
  TRY ctag.list_row<local.i>_02=Sub-Regiao de <serv.resources.<DB.ROW.<eval <local.i>-1>.capital>.name>
  TRY ctag.list_row<local.i>_02=Regiao sob administracao de <serv.resources.<DB.ROW.<eval <local.i>-1>.capital>.name>
 ENDDO
end

//Salva o tipo da town para a próxima função
ctag.town_type=<argn1>
list_show 1

[FUNCTION town_TrasferMastership]
//Transfere o dono da town de DEFNAME=<argv0> para o player de UID=<argv1>
if (!<town_IsTown <argv0>>)
 return 0
endif
DB.QUERY="SELECT master FROM towns WHERE region='<argv0>';"
IF (0<DB.ROW.0.master>)
 f_sendMessage <DB.ROW.0.master>,Voce nao eh mais mestre de <serv.resources.<argv0>.name>!,<DEF.SM_RED>
ENDIF
DB.EXECUTE="UPDATE towns SET master=<eval <argv1>> WHERE region='<argv0>';"
ref1=<argv1>
f_sendMessage <ref1>,Voce eh o novo mestre de <serv.resources.<argv0>.name>!,<DEF.SM_GREEN>
if (<ref1.IsOnline>)
 ref1.psfx 05B4
endif

[FUNCTION town_deleteTown]
//deleta a town de DEFNAME=<argv0> da DB
prompt_new Excluir <serv.resources.<argv0>.name>?<DEF.BR>Isso removera <serv.resources.<argv0>.name> do sistema de cidades permanentemente. (S/N)?
prompt_setAction town_deleteTown2 <argv0>,
prompt_show

[FUNCTION town_deleteTown2]
//Continuação de town_deleteTown
IF (STRMATCH(S,<argv1>))
 DB.EXECUTE="DELETE FROM towns_members WHERE region='<argv0>';"
 DB.EXECUTE="DELETE FROM towns_privs WHERE region='<argv0>';"
 DB.EXECUTE="DELETE FROM towns WHERE region='<argv0>';"
 DB.EXECUTE="UPDATE towns SET type=1, capital=region WHERE capital='<argv0>';"
 sysmessagered <serv.resources.<argv0>.name> excuida do sistema de cidades!
 return 1
ENDIF
return 0

[FUNCTION town_PromptFirstColor]
prompt_new Escolha a cor primaria de <serv.resources.<ctag.town_region>.name>:<DEF.BR>(numero da cor ou '0' para target)
prompt_setAction town_setColor 1,
prompt_setActionBack DIALOG d_town
prompt_show

[FUNCTION town_PromptSecondColor]
prompt_new Escolha a cor secundaria de <serv.resources.<ctag.town_region>.name>:<DEF.BR>(numero da cor ou '0' para target)
prompt_setAction town_setColor 2,
prompt_setActionBack DIALOG d_town
prompt_show

[FUNCTION town_setColor]
IF (!<argv[1]>)
 sysmessageyellow Selecione um item do mundo para escolher sua cor:
 ctag.town_coloriq=<argv[0]>
 targetf town_TargColor
ELSE
 DB.QUERY="UPDATE towns SET color<eval <argv[0]>>=<eval <argv[1]>> WHERE region='<ctag.town_region>';"
 DIALOG d_town
ENDIF

[FUNCTION town_TargColor]
if (!<argo>) || (!<argo.IsItem>)
 sysmessagered Item invalido.
 DIALOG d_town
else
 town_setColor <ctag.town_coloriq>,<argo.color>
 ctag.town_coloriq=
endif

[FUNCTION town_listPositions]
list_new "Lista de cargos de <serv.resources.<ctag.town_region>.name>"
list_newDbCol 25,title,Titulo
list_newDbCol 200,position,Posicao
list_setAction 
list_loadFromDb "SELECT title,position FROM towns_privs WHERE region='<ctag.town_region>' ORDER BY position"
//Transformar em decimal as posições deve você, Anakyn.
FOR t 1 <ctag.list_numitems>
 ctag.list_row<local.t>_02=<dctag.list_row<local.t>_02> de 1000
end
list_show 1
//########################################################################
//########################################################################
//      Funções para os Botões de Okay
//########################################################################
//########################################################################

[FUNCTION d_town_okay_found]
//OKAY da página TOWN_PAGE_FOUND. ARGN é o tipo da town.
if (<ARGCHK[1]>)
 town_AddTown <ctag.town_region>,1,<ctag.town_region>
 town
else
 town_selectCapital <eval <ARGCHK[1]>+(<ARGCHK[2]>*2)+(<ARGCHK[3]>*3)>
endif

[FUNCTION d_town_okay_races]
//OKAY da página TOWN_PAGE_RACES
local.races=
for r 1 5
 if (<ARGCHK[<dlocal.r>]>)
  DOSWITCH <dlocal.r>
   local.null
   local.races .= Anao,
   local.races .= Elfo,
   local.races .= Drow,
   local.races .= Humano,
   local.races .= Orc,
  ENDDO
 endif
end

local.races=<STRSUB 1 <eval STRLEN(<local.races>)-2> <local.races>>
DB.EXECUTE="UPDATE towns SET FriendRaces='<DB.ESCAPEDATA <local.races>>' WHERE region='<DB.ESCAPEDATA <ctag.town_region>>';"
town

[FUNCTION d_town_okay_laws]
//OKAY da página TOWN_PAGE_LAWS
local.flags=0
local.r=0
WHILE (!<IsEmpty <DEF.TOWN_PERMISSION_<dlocal.r>>>)
 local.flags |= <eval (2@<local.r>)*<ARGCHK[<dlocal.r>]>>
 local.r += 1
END
DB.EXECUTE="UPDATE towns SET permissions=<dlocal.flags> WHERE region='<ctag.town_region>';"
ctag.town_page=<DEF.TOWN_PAGE_REPORT>
DIALOG d_town


//########################################################################
//########################################################################
//      Funções para os contrução dos gumps
//########################################################################
//########################################################################

[FUNCTION town_buildReport]
        //CALL para contruir html e valores de TOWN_PAGE_REPORT
        DB.QUERY="SELECT * FROM towns WHERE region='<DB.ESCAPEDATA <ctag.town_region>>';"
        local.html=<DEF.BFONT_LPURPLE>    <serv.resources.<ctag.town_region>.name><DEF.BFONT_white> eh<addspace>
        DOSWITCH <DB.ROW.0.type>
         local.html .= UM TREMENDO BUG (reportar no forum)
         local.html .= uma regiao soberana
         local.html .= uma sub-regiao de <serv.resources.<DB.ROW.0.capital>.name>
         local.html .= uma regiao sob a administracao de <serv.resources.<DB.ROW.0.capital>.name>
        ENDDO
        local.html .= <addspace>cujo responsavel eh <DEF.BFONT_LPURPLE><uid.<DB.ROW.0.master>.tag.name><DEF.BFONT_white>.<DEF.BR>
        local.html .= - Tesouro: <strtresure <DB.row.0.tresure>><DEF.BR>
        local.html .= - Gasto periodico: ???
        local.races=<DB.ROW.0.FriendRaces>
        
[FUNCTION d_town_solve]
if (<ctag.town_page>==<DEF.TOWN_PAGE_FOUND>)
        resizepic 92 89 2620 416 82
        dhtmlgump 98 97 403 65 0 0 O que eh?
        resizepic 92 182 2620 416 189
        Group 0
        radio 105 200 210 211 1 1
        dtext 130 200 152 Estado maior
        dtext 130 214 62 Pode ter sub-regioes as quais o mesmo mestre controla
        dtext 130 228 62 e acumulara todas as suas riquezas.
        radio 105 250 210 211 0 2
        dtext 130 250 152 Sub-regiao
        dtext 130 264 62 Deve pertencer a um estado maior e herdara todas as leis e
        dtext 130 278 62 e caracteristicas do estado maior, incluindo hierarquia.
        radio 105 300 210 211 0 3
        dtext 130 300 152 Regiao sob administracao
        dtext 130 314 62 Nao tem administracao propria e depende totalmente de um
        dtext 130 328 62 estado maior ou sub-regiao, como uma extencao de
        dtext 130 342 62 territorio. (minas, florestas, vilarejos)
        button 445 385 247 248 1 0 1
        button 90 385 241 243 1 0 0

elif (<ctag.town_page>==<DEF.TOWN_PAGE_REPORT>)
        call town_buildReport
        resizepic 92 87 2620 416 147
        resizepic 92 241 2620 416 82
        resizepic 92 332 2620 416 82
        dhtmlgump 98 95 403 130 0 1 <addspace>   <local.html>
        button 101 251 30008 30009 1 0 2
        button 101 267 30008 30009 1 0 3
        button 101 283 30008 30009 1 0 4
        button 101 299 30008 30009 1 0 5
        dtext 120 248 66 Racas amigas:
        dtext 256 248 4 <local.races>
        dtext 120 264 66 Extrangeiros amigos:
        dtext 256 264 4 (n_friends)
        dtext 120 280 66 Inimigos publicos:
        dtext 256 280 4 (n_banned)
        dtext 120 296 66 Cidadaos:
        dtext 256 296 4 (n_citzens)
        button 101 342 30008 30009 1 0 6
        button 101 358 30008 30009 1 0 7
        button 101 374 30008 30009 1 0 8
        button 101 390 30008 30009 1 0 9
        dtext 119 340 66 Caracterização
        dtext 119 355 66 Leis
        dtext 119 371 66 Decretos
        dtext 119 387 66 Impostos
        button 319 342 30008 30009 1 0 10
        button 319 358 30008 30009 1 0 11
        button 319 374 30008 30009 1 0 12
        button 319 390 30008 30009 1 0 13
        dtext 337 340 66 Funcionarios:
        dtext 425 340 4 (n_npcs)
        dtext 337 356 66 Plebicitos:
        dtext 425 356 4 (n_polls)
        dtext 337 371 66 Peticoes:
        dtext 425 371 4 (n_petitions)
        dtext 337 387 66 Pedir direito de cidadania
        
elif (<ctag.town_page>==<DEF.TOWN_PAGE_CONFIG>)
        resizepic 92 89 2620 416 282
        dorigin 107 80
        dtext +18 *20 5 Cor primaria:
        gumppic +118 +1 1896 <eval <town_getFirstColor <ctag.town_region>>>
        IF (<src.town_CheckPrivs 1>)
         button - +3 30008 30009 1 0 31
        endif
        dtext +18 *20 5 Cor secundaria:
        gumppic +118 +1 1896 <eval <town_getSecondColor <ctag.town_region>>>
        IF (<src.town_CheckPrivs 1>)
         button - +3 30008 30009 1 0 32
        endif
        dtext +18 *20 5 Cargos existentes: (n_cargos)
        button - +3 30008 30009 1 0 39
        dtext +18 *20 5 Diplomacia
        button - +3 30008 30009 1 0 34
        IF (<src.town_CheckPrivs 1>)
         dtext +18 *20 45 Transferir titularidade
         button - +3 30008 30009 1 0 33
        ENDIF
        IF (<src.town_CheckPrivs 1>)
         dtext +18 *20 45 Transferir artefato
         button - +3 30008 30009 1 0 35
        ENDIF
        IF (<src.town_CheckPrivs 1>)
         dtext +18 *20 45 Transferir cofre
         button - +3 30008 30009 1 0 36
        ENDIF
        IF (<src.town_CheckPrivs 1>)
         dtext +18 *20 45 Transferir capital
         button - +3 30008 30009 1 0 37
        ENDIF
        IF (<src.town_CheckPrivs 1>)
         dtext +18 *20 45 Declarar independencia
         button - +3 30008 30009 1 0 38
        ENDIF
        button 92 385 4014 4015 1 0 1
        
elif (<ctag.town_page>==<DEF.TOWN_PAGE_RACES>)
        DB.QUERY="SELECT FriendRaces FROM towns WHERE region='<ctag.town_region>';"
        local.anao=<qval STRMATCH(*Anao*,<DB.ROW.0.FriendRaces>)?1:0>
        local.elfo=<qval STRMATCH(*Elfo*,<DB.ROW.0.FriendRaces>)?1:0>
        local.drow=<qval STRMATCH(*Drow*,<DB.ROW.0.FriendRaces>)?1:0>
        local.humano=<qval STRMATCH(*humano*,<DB.ROW.0.FriendRaces>)?1:0>
        local.orc=<qval STRMATCH(*orc*,<DB.ROW.0.FriendRaces>)?1:0>
        resizepic 110 128 9200 178 224
        resizepic 304 128 9200 178 224
        dtext 156 136 62 Racas amigas
        dtext 348 136 32 Racas inimigas
        dtext 152 168 92 Anoes
        dtext 344 168 92 Anoes
        dtext 152 200 92 Elfos
        dtext 344 200 92 Elfos
        dtext 152 232 92 Drows
        dtext 344 232 92 Drows
        dtext 152 264 92 Humanos
        dtext 344 264 92 Humanos
        dtext 152 296 92 Orcs
        dtext 344 296 92 Orcs
        
        //Anões
        Group 1
        radio 128 168 208 209 <local.anao> 1
        radio 320 168 208 209 <eval !<local.anao>> 0
        
        //Elfos
        Group 2
        radio 128 200 208 209 <local.elfo> 2
        radio 320 200 208 209 <eval !<local.elfo>> 0
        
        //Drows
        Group 3
        radio 128 232 208 209 <local.drow> 3
        radio 320 232 208 209 <eval !<local.drow>> 0
        
        //Humanos
        Group 4
        radio 128 264 208 209 <local.humano> 4
        radio 320 264 208 209 <eval !<local.humano>> 0
        
        //Orcs
        Group 5
        radio 128 296 208 209 <local.orc> 5
        radio 320 296 208 209 <eval !<local.orc>> 0
        
        button 96 384 241 242 1 0 0
        button 440 384 247 248 1 0 1
        
elif (<ctag.town_page>==<DEF.TOWN_PAGE_LAWS>)
        DB.QUERY="SELECT permissions FROM towns WHERE region='<ctag.town_region>';"
        local.permissions=<DB.row.0.permissions>
        resizepic 92 89 2620 416 289
        dtext 105 100 036 O que deve ser permitido?
        dorigin 105 100
        local.r=0
        local.c=11
        WHILE (!<IsEmpty <DEF.TOWN_PERMISSION_<dlocal.r>>>)
         if (<local.r> > <local.c>)
          dorigin *200 100
          local.c += 12
         endif
         checkbox - *20 210 211 <eval <local.permissions>&<eval 2@<local.r>>> <dlocal.r>
         dtext +22 +1 2100 <DEF.TOWN_PERMISSION_<dlocal.r>>
         local.r += 1
        END
        //button 96 384 241 242 1 0 0
        button 440 384 247 248 1 0 1
endif


//########################################################################
//########################################################################
//      DIALOGS
//########################################################################
//########################################################################

[DIALOG d_town]
//Dialog de interface do sistema
100,75
page 0
resizepic 50 31 2620 500 400
checkertrans 55 38 490 385
gumppic 0 0 10400
gumppic 0 160 10401
gumppic 0 356 10402
gumppic 518 0 10410
gumppic 518 160 10411
gumppic 518 356 10412
dhtmlgump 92 43 416 38 1 0 <DEF.CENTER><DEF.BFONT_RED><serv.resources.<ctag.town_region>.name>
call d_town_solve

[DIALOG d_town text]

[DIALOG d_town button]
ON=1
// Okay geral
DOSWITCH <ctag0.town_page>
 local.null             //Não tem TOWN_PAGE_*
 call d_town_okay_found //TOWN_PAGE_FOUND
 local.null             //TOWN_PAGE_REPORT
 town                   //TOWN_PAGE_CONFIG
 town                   //TOWN_PAGE_PERMISSIONS
 call d_town_okay_races //TOWN_PAGE_RACES
 town                   //TOWN_PAGE_BANS
 town                   //TOWN_PAGE_FRIENDS
 town                   //TOWN_PAGE_TAXES
 call d_town_okay_laws  //TOWN_PAGE_LAWS
ENDDO


ON=2
// Raças amigas
ctag.town_page=<DEF.TOWN_PAGE_RACES>
DIALOG d_town

ON=3
// Friends
// 

ON=4
// Banned
// 

ON=5
// Citzens
// 

ON=6
// Config
ctag.town_page=<DEF.TOWN_PAGE_CONFIG>
DIALOG d_town

ON=7
// Permissions
ctag.town_page=<DEF.TOWN_PAGE_LAWS>
DIALOG d_town

ON=8
// Laws
// 

ON=9
// Taxes
// 

ON=10
// NPCs
// 

ON=11
// Polls
// 

ON=12
// Petitions
// 

ON=13
// Azilum
// 

ON=31
// Change color 1
town_PromptFirstColor

ON=32
// Change color 2
town_PromptSecondColor

ON=33
// Transfer mastership
// 

ON=34
// Diplomacy
// 

ON=35
// Change artifact
// 

ON=36
// Tranfer vault
// 

ON=37
// Tranfer Capital
// 

ON=38
// Independency
// 

ON=39
// Show Positions
town_listPositions

[EOF]


