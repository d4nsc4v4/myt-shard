//*****************************************************************************
//*****************************************************************************
//
// SKILL MAGIC RESISTANCE por
//
//  UsMarine (vinicius.arroyo at gmail.com)
//
//*****************************************************************************
//*****************************************************************************
//TODO:
// fazer o teste de magic resistance contra magery do atacante
// se passar no teste, diminuir os efeitos da magia.
//
//TAGS usadas:
//*****************************************************************************


//*****************************************************************************
//*****************************************************************************
// FUNCTIONs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// sk_magic_resist spell,magery
//*****************************************************************************
//argn1=spell
//argn2=magery skill
//SRC=caster
//DEFAULT=target
[FUNCTION sk_magic_resist]

if <serv.spell.<argn1>.flags>&spellflag_resist
    serv.log <name> can resist <serv.spell.<argn1>.name>
    skill_gain skill_magicresistance
endif    

//*****************************************************************************
// sk_magic_resist_bonus
//*****************************************************************************
[FUNCTION sk_magic_resist_bonus]
TAG.resistance=<eval (<magicresistance>-400)*2>
TAG.resistance=<eval <TAG.resistance>/30> //0 a 40
if <TAG.resistance> < 0
    TAG.resistance=0
endif
return <TAG.resistance>

//*****************************************************************************
// rescoldmod <value>
//*****************************************************************************
[FUNCTION rescoldmod]
TAG.rescold = <eval <TAG0.rescold>+(<argv0>)>
if <TAG0.resistance> > <TAG.rescold>
    RESCOLD=<TAG0.resistance>
else
    RESCOLD=<TAG.rescold>
endif

if <TAG.rescold> < 0
    LOCAL.d=<eval <argv0>-<TAG.rescold>>
    TAG.rescold = 0
    return <LOCAL.d>
endif
return <argv0>

//*****************************************************************************
// resfiremod <value>
//*****************************************************************************
[FUNCTION resfiremod]
TAG.resfire = <eval <TAG0.resfire>+(<argv0>)>
if <TAG0.resistance> > <TAG.resfire>
    RESFIRE=<TAG0.resistance>
else
    RESFIRE=<TAG.resfire>
endif

if <TAG.resfire> < 0
    LOCAL.d=<eval <argv0>-<TAG.resfire>>
    TAG.resfire = 0
    return <LOCAL.d>
endif
return <argv0>

//*****************************************************************************
// respoisonmod <value>
//*****************************************************************************
[FUNCTION respoisonmod]
TAG.respoison = <eval <TAG0.respoison>+(<argv0>)>
if <TAG0.resistance> > <TAG.respoison>
    RESPOISON=<TAG0.resistance>
else
    RESPOISON=<TAG.respoison>
endif

if <TAG.respoison> < 0
    LOCAL.d=<eval <argv0>-<TAG.respoison>>
    TAG.respoison = 0
    return <LOCAL.d>
endif
return <argv0>

//*****************************************************************************
// resenergymod <value>
//*****************************************************************************
[FUNCTION resenergymod]
TAG.resenergy = <eval <TAG0.resenergy>+(<argv0>)>
if <TAG0.resistance> > <TAG.resenergy>
    RESENERGY=<TAG0.resistance>
else
    RESENERGY=<TAG.resenergy>
endif

if <TAG.resenergy> < 0
    LOCAL.d=<eval <argv0>-<TAG.resenergy>>
    TAG.resenergy = 0
    return <LOCAL.d>
endif
return <argv0>


//*****************************************************************************
// resistanceInit
//*****************************************************************************
[FUNCTION resistanceInit]
rescold=<sk_magic_resist_bonus>
resfire=<sk_magic_resist_bonus>
respoison=<sk_magic_resist_bonus>
resenergy=<sk_magic_resist_bonus>

[EOF]